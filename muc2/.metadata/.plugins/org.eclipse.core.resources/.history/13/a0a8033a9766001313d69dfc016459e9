//Chris MacNeil S1024734

package org.me.myandroidstuff;

import java.io.BufferedReader;

//import android.R.color;
import android.R.color;
import android.text.format.DateFormat;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;

import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Iterator;
import java.util.LinkedList;

import android.app.Activity;
import android.app.Dialog;
import android.content.Context;
import android.content.Intent;
import android.graphics.Color;
import android.os.Bundle;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;

public class TVListingTestActivity extends Activity implements OnClickListener 
{
	private static final String TAG = "myApp";
	
	private EditText infoView;
	private String result;
	private String full;
	
	public int count;
	
	private Calendar now;
	
	final Context context =this;
	
	private LinkedList<Widget> aList;
	private LinkedList<String> stringList;
	private LinkedList<Button> buttons= new LinkedList<Button>();
	
	
	
	private Button forwardDay;
	private Button backDay;
	private Button home;
	private TextView whatDay;
	
	
	private int dayParse= 0;
    private String tvListingURL;
    private String channel;
    
    
    /** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState) 
    {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);
        stringList = new LinkedList<String>();
        channel = getIntent().getStringExtra("channelName");
 
        infoView= (EditText) findViewById(R.id.infoView);
        tvListingURL = "http://bleb.org/tv/data/rss.php?ch="+channel+"&day="+dayParse;
        
        forwardDay=(Button)findViewById(R.id.forwardbutton);
      	backDay=(Button)findViewById(R.id.backbutton);
      	whatDay=(TextView)findViewById(R.id.whatday);
      	home=(Button)findViewById(R.id.home);
      	
      	forwardDay.setOnClickListener(this);
      	backDay.setOnClickListener(this);
      	home.setOnClickListener(this);
      
      	now = Calendar.getInstance();
      	//now.set(Calendar.MONTH, );
      //	now.set(Calendar.DAY_OF_MONTH, Calendar.DAY_OF_MONTH);
      //	now.set(Calendar.DAY_OF_WEEK, Calendar.DAY_OF_WEEK);
      	
    	
        
       try
        {
    	   
        	result = tvListingString(tvListingURL);
        	
        }
    
        catch(IOException ae)
        {
        	//response.setText("Error");
        	//response.setText(ae.toString());
        }
       
       
       	XmlParser myXMLParser;
       	myXMLParser = new XmlParser();
   		aList= myXMLParser.parseWidgetXMLString(result);
   		
   		full="";
   	
   		Iterator<Widget> it = aList.iterator();
        while (it.hasNext()) {
             full += it.next().toString() + "\n\n";
        }
        LinearLayout layout = (LinearLayout)findViewById(R.id.mainll);
       
        for (int i=0;i<aList.size();i++)
        {
        	String temp;
        	temp=aList.get(i).toTitle();
        	stringList.add(temp);
        	Log.e(TAG, "test4");
        }
      
        for(int i=0; i< aList.size();i++)
        {
        	Button btn = new Button(this);
            btn.setId(i);
        	btn.setOnClickListener(this);
            btn.setText(stringList.get(i));
            btn.setLayoutParams(new LayoutParams(LayoutParams.FILL_PARENT, LayoutParams.FILL_PARENT));
           
            btn.setBackgroundResource(color.black);
            btn.setTextColor(Color.parseColor("#FFBBFF"));
           
        	buttons.add(btn);
        	layout.addView(btn);
        }
        whatDay.setText(DateFormat.format("E, dd MMMM", now));
 
       
   		//full=aList.get(8).toDescription();
        
    	//response.setText(full);
       
        
        //for (int j=0;j<aList.size();j++)
        //{
        	//buttons.get(j).setText(stringList.get(j));
       // }
        
        //but1.setText(stringList.get(0));
    }
    
    
    
    private static String tvListingString(String urlString)throws IOException
    {
	 	String result = "";
    	InputStream anInStream = null;
    	int response = -1;
    	URL url = new URL(urlString);
    	URLConnection conn = url.openConnection();
    	if (!(conn instanceof HttpURLConnection))
    			throw new IOException("Not an HTTP connection");
    	try
    	{
    		HttpURLConnection httpConn = (HttpURLConnection) conn;
    		httpConn.setAllowUserInteraction(false);
    		httpConn.setInstanceFollowRedirects(true);
    		httpConn.setRequestMethod("GET");
    		httpConn.connect();
    		response = httpConn.getResponseCode();
    		if (response == HttpURLConnection.HTTP_OK)
    		{
    			anInStream = httpConn.getInputStream();
    			InputStreamReader in= new InputStreamReader(anInStream);
    			BufferedReader bin= new BufferedReader(in);
    			//result = bin.readLine();
    			// Input is over multiple lines
    			String line = new String();
    			while (( (line = bin.readLine())) != null)
    			{
    				result = result + "\n" + line;
    			}
    		}
    	}
    	catch (Exception ex)
    	{
    		throw new IOException("Error connecting");
    	}
    	
    	return result;
    	
    }
    
    public void ResetParse()
    {
    	whatDay.setText(DateFormat.format("E, dd MMMM", now));
        stringList = new LinkedList<String>();
        LinearLayout layout = (LinearLayout)findViewById(R.id.mainll);
        for(int i=0; i< aList.size();i++)
        {
        	Button btn;
            btn = buttons.get(i);
        	layout.removeView(btn);
        }
        
        tvListingURL = "http://bleb.org/tv/data/rss.php?ch=bbc1_scotland&day="+dayParse;
        
       try
        {
    	   
        	result = tvListingString(tvListingURL);
        	
        }
    
        catch(IOException ae)
        {
        	//response.setText("Error");
        	//response.setText(ae.toString());
        }
       
       
       	XmlParser myXMLParser;
       	myXMLParser = new XmlParser();
   		aList= myXMLParser.parseWidgetXMLString(result);
   		
   		full="";
   	
   		Iterator<Widget> it = aList.iterator();
        while (it.hasNext()) {
             full += it.next().toString() + "\n\n";
        }
        
       
        for (int i=0;i<aList.size();i++)
        {
        	String temp;
        	temp=aList.get(i).toTitle();
        	stringList.add(temp);
        	Log.e(TAG, "test4");
        }
        
        buttons= new LinkedList<Button>();
        for(int i=0; i< aList.size();i++)
        {
        	Button btn = new Button(this);
            btn.setId(i);
        	btn.setOnClickListener(this);
            btn.setText(stringList.get(i));
            btn.setLayoutParams(new LayoutParams(LayoutParams.FILL_PARENT, LayoutParams.FILL_PARENT));
            btn.setBackgroundResource(color.black);
            btn.setTextColor(Color.parseColor("#FFBBFF"));
        	buttons.add(btn);
        	layout.addView(btn);
        }
    }


	public void onClick(View v) {
		
		if (v==forwardDay)
		{
			dayParse++;
			if(dayParse>5)
			{
				dayParse=0;
				now.add(Calendar.DAY_OF_MONTH, -5);
			}
			else
			{
				now.add(Calendar.DAY_OF_MONTH, 1);
			}
			ResetParse();
		}
		
		if (v==backDay)
		{
			dayParse--;
			if(dayParse<0)
			{
				dayParse=5;
				now.add(Calendar.DAY_OF_MONTH, 5);
			}
			else
			{
				now.add(Calendar.DAY_OF_MONTH, -1);
			}
			ResetParse();
		}
		
		for (count =0;count<aList.size();count++)
			{
			if (v==buttons.get(count))
				{
				 Log.e(TAG,"Testing click -1.1");
				showDialog();
				 
				}
			}
		
		if(v==home)
		{
			Intent intent = new Intent(getApplicationContext(), org.me.myandroidstuff.MainPage.class); 
			startActivity(intent);
		}
	} 
	
	public void showDialog()
	{
		final Dialog dialog= new Dialog(context,R.style.cust_dialog);
        dialog.setContentView(R.layout.dialog_info);
        
        infoView=(EditText) dialog.findViewById(R.id.infoView);
        infoView.setFocusable(false);
		infoView.setText("");
		
		dialog.setTitle(aList.get(count).toTitle());
		infoView.append(aList.get(count).toDescription());
		
		
		Button back=(Button)dialog.findViewById(R.id.back);
        Button reminder=(Button)dialog.findViewById(R.id.reminder);
        
        
        Log.e(TAG,"Testing click 1.5");
        
       back.setOnClickListener(new OnClickListener()
        {
        	public void onClick(View v)
        	{
            	dialog.dismiss();
        	}
        });
       reminder.setOnClickListener(new OnClickListener()
       {
       	public void onClick(View v)
       	{
           	Reminder(aList.get(count).toTitle(),now.get(Calendar.DATE));
       	}
       });
       dialog.show();
	}
	
	public void Reminder(String title, int date )
	{
		char[] time=new char[3];
		title.getChars(0, 3, time, 0);
		
		String finalTime="";
		for(int i=0;i<3;i++)
			{
				finalTime+=time[i];
			}
		
		Calendar cal = Calendar.getInstance();              
		Intent intent = new Intent(Intent.ACTION_EDIT);
		intent.setType("vnd.android.cursor.item/event");
		intent.putExtra("beginTime", finalTime);
		intent.putExtra("allDay", false);
		intent.putExtra("rrule", "FREQ=DAILY");
		intent.putExtra("endTime", cal.getTimeInMillis()+60*60*1000);
		intent.putExtra("title", title.toString());
		startActivity(intent);
	}
}